<?php

/**
 * FIXME - Add a hook requirements to check for the GEOS extension.
 */
/**
 * Implementats hook_install().
 */
function gm3_region_install(){
  // Ensure that Memcache isn't used for the cache_gm3_polygon bin
  gm3_region_update_7007();
  // Load the data into the tables.
  gm3_region_update_7009();
  // Finally, we set the shape data.  This query is MySQL specific.
  db_query('UPDATE {gm3_region_data} SET mysql_polygons = POLYGONFROMTEXT(polygons)');
}

/**
 * Implements hook_schema().
 */
function gm3_region_schema(){
  return array(
    'cache_gm3_polygon' => drupal_get_schema_unprocessed('system', 'cache'),
    'gm3_region_data' => array(
      'description' => 'Stores the Polygon data for TDWG4 Regions',
      'fields' => array(
        'name' => array(
          'description' => "Level name",
          'type' => 'varchar',
          'not null' => TRUE,
          'length' => 64
        ),
        'continent' => array(
          'description' => "Continent",
          'type' => 'varchar',
          'length' => 20,
          'default' => ''
        ),
        'iso_code' => array(
          'description' => "ISO Code",
          'type' => 'varchar',
          'length' => 2,
          'default' => ''
        ),
        'level_5_code' => array(
          'description' => 'Unofficial Level 5 code.  Can be used for Watson vice counties or similar.',
          'type' => 'varchar',
          'length' => 2,
          'not null' => TRUE,
          'default' => ''
        ),
        'level_4_code' => array(
          'description' => "Level 4 code",
          'type' => 'varchar',
          'length' => 2,
          'not null' => TRUE,
          'default' => ''
        ),
        'level_3_code' => array(
          'description' => "Level 3 code",
          'type' => 'varchar',
          'length' => 3,
          'not null' => TRUE,
          'default' => ''
        ),
        'level_2_code' => array(
          'description' => "Level 2 id",
          'type' => 'int',
          'size' => 'tiny',
          'not null' => TRUE,
          'default' => 0
        ),
        'level_1_code' => array(
          'description' => "Level 1 id",
          'type' => 'int',
          'not null' => TRUE,
          'size' => 'tiny',
          'default' => 0
        ),
        'polygons' => array(
          'description' => "Polygons",
          'type' => 'text',
          'not null' => TRUE,
          'size' => 'medium'
        ),
        'mysql_polygons' => array(
          'description' => 'MySQL GEO extension',
          'mysql_type' => 'MULTIPOLYGON'
        )
      ),
      'primary key' => array(
        'level_4_code',
        'level_3_code',
        'level_2_code',
        'level_1_code'
      )
    )
  );
}

/**
 * Add the mysql_polygons column.
 */
function gm3_region_update_7001(){
  db_add_field('gm3_region_data', 'mysql_polygons', array(
    'description' => 'MySQL GEO extension',
    'mysql_type' => 'MULTIPOLYGON'
  ));
  // Finally, we set the shape data.  This query is MySQL specific.
  db_query('UPDATE {gm3_region_data} SET mysql_polygons = POLYGONFROMTEXT(polygons)');
}

/**
 * Remove the binary_polygons field.
 */
function gm3_region_update_7002(){
  db_drop_field('gm3_region_data', 'binary_polygons');
}

/**
 * Update all gm3_region tables to update entries like ':::ITA-IT' to
 * '1:13:ITA:ITA-IT'
 */
function gm3_region_update_7004(){
  $results = db_select('gm3_region_data', 'g')->fields('g', array(
    'level_1_code',
    'level_2_code',
    'level_3_code',
    'level_4_code'
  ))->execute();
  $updates = array();
  foreach($results as $row){
    if($row->level_4_code){
      $updates[':::' . $row->level_3_code . '-' . $row->level_4_code] = $row->level_1_code . ':' . $row->level_2_code . ':' . $row->level_3_code . ':' . $row->level_3_code . '-' . $row->level_4_code;
    }else if($row->level_3_code){
      $updates['::' . $row->level_3_code] = $row->level_1_code . ':' . $row->level_2_code . ':' . $row->level_3_code;
    }else if($row->level_2_code){
      $updates[':' . $row->level_2_code] = $row->level_1_code . ':' . $row->level_2_code;
    }
  }
  foreach(field_info_fields() as $id => $field){
    if($field['type'] == 'gm3_region' || ($field['type'] == 'gm3_combination' && isset($field['columns']['region_id']))){
      // Update both field_data_N and field_revision_N
      foreach(array(
        'data',
        'revision'
      ) as $table){
        $table = "field_{$table}_{$id}";
        $column = "{$id}_region_id";
        foreach($updates as $old_value => $new_value){
          db_update($table)->fields(array(
            $column => $new_value
          ))->condition($column, $old_value)->execute();
        }
      }
    }
  }
  // Finally
  cache_clear_all();
}

/**
 * Force the use of the database cache for cache_gm3_polygon
 */
function gm3_region_update_7007(){
  variable_set('cache_class_cache_gm3_polygon', 'DrupalDatabaseCache');
}

/**
 * Add the level_5_code column
 */
function gm3_region_update_7008(){
  db_add_field('gm3_region_data', 'level_5_code', array(
    'description' => 'Unofficial Level 5 code.  Can be used for Watson vice counties or similar.',
    'type' => 'varchar',
    'length' => 2,
    'not null' => TRUE,
    'default' => ''
  ));
}

/**
 * Load the data.
 */
function gm3_region_update_7009(){
  // Load the data into the tables.
  db_query(file_get_contents(drupal_get_path('module', 'gm3_region') . '/region_data/regions.sql'));
  db_query(file_get_contents(drupal_get_path('module', 'gm3_region') . '/region_data/cache.sql'));
}