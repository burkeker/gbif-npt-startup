<?php

class ItisTermTestCase extends ScratchpadsTweaksTestCase{

  protected $itis_term_user;

  public static function getInfo(){
    return array(
      'name' => 'ITIS Term functionality',
      'description' => 'Create, view, edit, delete ITIS term classifications',
      'group' => 'Scratchpads'
    );
  }

  /**
   * Enable modules and create users with specific permissions.
   */
  function setUp(){
    parent::setUp('itis_term');
    // Create users.
    $this->itis_term_user = $this->drupalCreateUser(array(
      'administer taxonomy'
    ));
    // We set the legal_accepted on the user so that login passes.
    parent::scratchpads_tweaks_legal_save($this->itis_term_user->uid);
  }

  /**
   * Confirm that the "admin/structure/taxonomy/add" page is accessible when
   * this module is installed.
   */
  function testAccessTaxonomyAddPage(){
    $this->drupalLogin($this->itis_term_user);
    $this->drupalGet('admin/structure/taxonomy/add');
    $this->assertResponse(200);
  }

  /**
   * Basic tests for Itis Term
   *  
   */
  function testItisTermBasic(){
    //Login the admin user.
    $this->drupalLogin($this->itis_term_user);
    $this->drupalGet('admin/structure/taxonomy/add');
    $this->assertText('biological classification', 'Biological classification shown', 'Biological Classifications');
    $this->assertRaw('Animal', 'Animal classification shown', 'Biological Classifications');
    $this->assertRaw('Algae/Fungi/Plants', 'Algae/Fungi/Plants classification shown', 'Biological Classifications');
    $this->assertRaw('Moneran', 'Moneran classification shown', 'Biological Classifications');
    // Choose one and create a vocabulary
    $edit = array();
    $human_name = $this->randomName();
    $edit['name'] = $human_name;
    $machine_readable = $this->machine_name($human_name);
    $edit['machine_name'] = $machine_readable;
    $edit['biological_classification'] = 1;
    $this->drupalPost(NULL, $edit, t('Save'));
    $this->assertText('Created new vocabulary', 'Biological classification successfully created');
    $vocab = taxonomy_vocabulary_machine_name_load($machine_readable);
    $this->assertTrue($vocab, 'Vocabulary confirmed  by query');
    // Test that extra fields have been added. We are checking one from each group
    $this->drupalGet('admin/structure/taxonomy/' . $machine_readable . '/fields');
    $this->assertText('field_rank', 'field_rank added to vocabulary');
    $this->assertText('field_usage', 'field_usage added to vocabulary');
    $this->assertText('field_authors', 'field_authors added to vocabulary');
    $this->assertText('field_vernacular_name_collection', 'field_vernacular_name_collection added to vocabulary');
  }
}