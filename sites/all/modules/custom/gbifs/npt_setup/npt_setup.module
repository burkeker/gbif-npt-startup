<?php
/**
 * @file
 * This module is based on scratchpads_setup, in order to provide NPT specific forms
 * during the setup process.
 *
 */

/**
 * Implementation of hook_default_flows().
 */
function npt_setup_default_flows($name = NULL) {
  $default_flows = array(
    'site_setup' => array(
      'title' => t('Site setup'),
      'name' => 'site_setup',
      'description' => t('New NPT Startup site set up.'),
      'path' => 'setup',
      'show_trail' => 1,
      'show_back' => 1,
      'show_cancel' => 1,
      'finish_path' => 'setup-complete',
      'steps' => array(
        array(
          'form_id' => 'npt_setup_welcome_form',
          'title' => 'Welcome'
        ),
        array(
          'form_id' => 'npt_setup_front_form',
          'title' => 'Front page'
        ),
        array(
          'form_id' => 'npt_setup_about_form',
          'title' => 'About us page'
        ),
        array(
          'form_id' => 'npt_setup_synopsis_form',
          'title' => 'Synopsis of biodiversity'
        ),
        array(
          'form_id' => 'npt_setup_news_form',
          'title' => 'News'
        ),
        array(
          'form_id' => 'npt_setup_licence_form',
          'title' => 'Licence type'
        ),
        array(
          'form_id' => 'tools_admin_form',
          'title' => 'Tools',
          'path' => 'admin/structure/tools'
        )
      )
    )
  );
  if ($name) {
    return $default_flows[$name];
  }
  else {
    return $default_flows;
  }
}

/**
 * Implements hook_admin_paths().
 */
function npt_setup_admin_paths() {
  $paths = array(
    'setup' => TRUE,
    'setup/*' => TRUE,
    'setup-complete' => TRUE
  );
  return $paths;
}

/**
 * Implements hook_menu().
 */
function npt_setup_menu() {
  $items = array();
  $items['setup-complete'] = array(
    'title' => 'Setup complete',
    'description' => 'Setup complete.',
    'page callback' => 'npt_setup_complete_page',
    'type' => MENU_CALLBACK,
    'access arguments' => array(
      'access content'
    )
  );
  $items['admin/config/npt'] = array(
    'title' => t('NPT Configuration'),
    'description' => t("Configure settings that determine how this Drupal site presents itself as a Nodes' portal."),
    'position' => 'right',
    'weight' => -10,
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('administer site configuration'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );
  $items['admin/config/npt/settings'] = array(
    'title' => t('GBIF Participant Node'),
    'description' => t('Settings for the GBIF Participant Node with which this Drupal site is associated.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('npt_setup_settings'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'npt_setup.admin.inc',
  );
  return $items;
}

/**
 * Implements hook_library().
 */
function npt_setup_library() {
  $libraries['node_coordinate'] = array(
    'title' => 'Node Coordinate',
    'js' => array(
      drupal_get_path('module', 'npt_setup') . '/js/node_coordinate.js' => array(
        'type' => 'file',
        'scope' => 'footer',
        'weight' => 20,
      ),
    ),
    'css' => array(
      drupal_get_path('module', 'npt_setup') . '/css/node_coordinate.css' => array(
        'type' => 'file',
        'media' => 'all',
      ),
    ),
  );
  $libraries['leaflet'] = array(
    'title' => 'leaflet',
    'js' => array(
      libraries_get_path('leaflet') . '/leaflet.js' => array(
        'type' => 'file',
        'scope' => 'footer',
        'weight' => 20,
      ),
    ),
    'css' => array(
      libraries_get_path('leaflet') . '/leaflet.css' => array(
        'type' => 'file',
        'media' => 'all',
      ),
    ),
  );
  return $libraries;
}


/**
 * Implements hook_module_implements_alter().
 */
function npt_setup_module_implements_alter(&$implementations, $hook) {
  if ($hook == 'form_alter') {
    // Scratchpads setup form later should be called last
    $group = $implementations['npt_setup'];
    unset($implementations['npt_setup']);
    $implementations['npt_setup'] = $group;
  }
}

/** 
 * SETUP FORMS
 */
function npt_setup_welcome_form($form, &$form_state) {
  // Sanity check - ensure this hasn't already been completed
  // If it hasn't been filled in, npt_setup will be integer 0 - 6
  if (variable_get('npt_setup', FALSE) === FALSE) {
    drupal_goto();
  }
  $form['welcome'] = array(
    '#type' => 'fieldset',
    '#prefix' => t('<h3>Welcome to NPT setup!</h3>')
  );
  $form['welcome']['explanation'] = array(
    '#prefix' => '<div class="npt-setup-welcome-text">',
    '#markup' => t('<p>Thank you for joining NPT project.</p><p>You are about to go through a series of basic steps to provide NPT Startup site some initial settings and contents, so the site will scope to fit the need of your node.</p><p>This is an one-time setup process. Once completed, you won\'t allow to modify the settings and settings by revisiting these forms. Instead, you\'ll go to individual configuations and content management to edit them.</p><p>We recommend you take a few minutes to go through them now.</p><p>Click continue to start the set up process.</p>'),
    '#suffix' => '</div>'
  );
  return $form;
}

function npt_setup_front_form($form, &$form_state) {
  $form['front'] = array(
    '#title' => t('Front page'),
    '#type' => 'fieldset',
    '#description' => t('Please enter an introductory message to welcome people who visit your site. <br/>This message will show on the front page.')
  );
  $form['front']['front_page_welcome_message'] = array(
    '#title' => t('Welcome message'),
    '#type' => 'text_format',
    '#format' => NULL,
    '#default_value' => variable_get('front_page_welcome_message'),
    '#required' => TRUE
  );
  return $form;
}

/**
 * Form submit
 * Front page
 */
function npt_setup_front_form_submit($form, &$form_state) {
  variable_set('front_page_welcome_message', $form_state['values']['front_page_welcome_message']['value']);

  $bodytext = $form_state['values']['front_page_welcome_message']['value'];

  $node = new stdClass();
  $node->type = 'page';
  node_object_prepare($node);
  $node->title = t('Welcome to GBIF Benin!');
  $node->language = LANGUAGE_NONE;
  $node->body[$node->language][0]['value'] = $bodytext;
  $node->body[$node->language][0]['summary'] = text_summary($bodytext);
  $node->body[$node->language][0]['format'] = $form_state['values']['front_page_welcome_message']['format'];
  $node->status = 1;
  $node->comment = 1;
  $node->promote = 0;
  $node->revision = 0;
  $node->changed = $_SERVER['REQUEST_TIME'];
  $node->created = $_SERVER['REQUEST_TIME'];
  node_submit($node);
  node_save($node);
  
  // Use this node as the front page
  variable_set('site_frontpage', 'node/' . $node->nid);
}

function npt_setup_about_form($form, &$form_state) {
  $node_shortname = variable_get('gbif_participant_shortname');
  $title = isset($node_shortname) ? t('About') . ' ' . $node_shortname : t('About us');
  $description = t('An <em>@title</em> page will be automatically created for your site. <br/>An administrative contact and a technical contact will be inserted below the description.', array('@title' => $title));
  $form['about'] = array(
    '#title' => t('About us page'),
    '#type' => 'fieldset',
    '#description' => $description
  );
  $form['about']['about_us_title'] = array(
    '#type' => 'textfield',
    '#title' => t('The title of your "About us" page:'),
    '#default_value' => $title,
    '#description' => t('The default title uses the Node short name you provided during installation. Feel free to change to whatever appropriate.'),
    '#required' => FALSE
  );
  $form['about']['about_us'] = array(
    '#title' => t('The description of your "About us" page:'),
    '#type' => 'text_format',
    '#format' => NULL,
    '#required' => TRUE
  );
  $form['about']['admin_name'] = array(
    '#type' => 'textfield',
    '#title' => t('Full name:'),
    '#prefix' => '<p>' . t('Administrative contact:') . '</p>',
    '#required' => TRUE,
    '#description' => t('For example, node manager.'),
  );
  $form['about']['admin_email'] = array(
    '#type' => 'textfield',
    '#title' => t('Email:'),
    '#required' => TRUE,
    '#description' => t('Please make sure the email is entered correctly'),
  );
  $form['about']['tech_name'] = array(
    '#type' => 'textfield',
    '#title' => t('Full name:'),
    '#prefix' => '<p>' . t('Technical contact:') . '</p>',
    '#required' => TRUE,
    '#description' => t('For example, the developer or programmer that maintain this website.'),
  );
  $form['about']['tech_email'] = array(
    '#type' => 'textfield',
    '#title' => t('Email:'),
    '#required' => TRUE,
    '#description' => t('Please make sure the email is entered correctly'),
  );
  return $form;
}

function npt_setup_about_form_validate($form, &$form_state) {
  $values = $form_state['values'];

  if (!valid_email_address($values['admin_email'])) {
      form_set_error('admin_email', st('Please enter a valid email address'));
  }
  if (!valid_email_address($values['tech_email'])) {
      form_set_error('tech_email', st('Please enter a valid email address'));
  }
}

function npt_setup_about_form_submit($form, &$form_state) {

  // Prepare bodytext
  $bodytext = $form_state['values']['about_us']['value'];
  $bodytext .= '<h4>Administrative contact:</h4>';
  $bodytext .= '<p>' . $form_state['values']['admin_name'] . '<br/>' . 'Email: ' . email_format($form_state['values']['admin_email']) . '</p>';
  $bodytext .= '<h4>Technical contact:</h4>';
  $bodytext .= '<p>' . $form_state['values']['tech_name'] . '<br/>' . 'Email: ' . email_format($form_state['values']['tech_email']) . '</p>';


  $node = new stdClass();
  $node->type = 'page';
  node_object_prepare($node);
  $node->title = $form_state['values']['about_us_title'];
  $node->language = LANGUAGE_NONE;
  $node->body[$node->language][0]['value'] = $bodytext;
  $node->body[$node->language][0]['summary'] = text_summary($bodytext);
  $node->body[$node->language][0]['format'] = $form_state['values']['about_us']['format'];
  $node->status = 1;
  $node->comment = 1;
  $node->promote = 0;
  $node->revision = 0;
  $node->changed = $_SERVER['REQUEST_TIME'];
  $node->created = $_SERVER['REQUEST_TIME'];
  $path = 'about-us';
  $node->path = array(
    'alias' => $path
  );
  $node->menu = array(
    'enabled' => 1,
    'mlid' => 0,
    'module' => 'menu',
    'hidden' => 0,
    'has_children' => 0,
    'customized' => 0,
    'options' => array(),
    'expanded' => 0,
    'parent_depth_limit' => 8,
    'link_title' => $node->title,
    'description' => $node->title,
    'parent' => 'main-menu:0',
    'weight' => 20,
    'plid' => 0,
    'menu_name' => PRIMARY_MENU_NAME // or 'main-menu'?
  );
  node_submit($node);
  node_save($node);
}

function npt_setup_synopsis_form($form, &$form_state) {
  $country_value = variable_get('gbif_participant_node');
  $country = explode('-', $country_value);
  $node_country = $country[1];
  $node_country = ($node_country == 'Chinese Taipei') ? 'Taiwan' : $node_country;
  
  $title = isset($node_country) ? t('Biodiversity in') . ' ' . $node_country : t('Synopsis of Biodiversity');
  $description = t('An <em>@title</em> page will be automatically created for your site. <br/>Use this form to introduce biodiversity of your country.', array('@title' => $title));

  $form['synopsis'] = array(
    '#type' => 'fieldset',
    '#title' => t('Synopsis of Biodiversity'),
    '#description' => $description
  );
  $form['synopsis']['synopsis_title'] = array(
    '#type' => 'textfield',
    '#title' => t('The title of your "Synopsis of Biodiversity" page:'),
    '#default_value' => $title,
    '#description' => t('The default title uses the GBIF participant country you provided during installation. Feel free to change to whatever appropriate.'),
    '#required' => FALSE
  );
  $form['synopsis']['synopsis_text'] = array(
    '#type' => 'text_format',
    '#title' => t('Synopsis of biodiversity:'),
    '#format' => NULL,
    '#required' => TRUE,
  );
  return $form;
}

function npt_setup_synopsis_form_submit($form, &$form_state) {

  // Prepare bodytext
  $bodytext = $form_state['values']['synopsis_text']['value'];

  $node = new stdClass();
  $node->type = 'page';
  node_object_prepare($node);
  $node->title = $form_state['values']['synopsis_title'];
  $node->language = LANGUAGE_NONE;
  $node->uid = 1;
  $node->body[$node->language][0]['value'] = $bodytext;
  $node->body[$node->language][0]['summary'] = text_summary($bodytext);
  $node->body[$node->language][0]['format'] = $form_state['values']['synopsis_text']['format'];
  $node->status = 1;
  $node->comment = 1;
  $node->promote = 0;
  $node->revision = 0;
  $node->changed = $_SERVER['REQUEST_TIME'];
  $node->created = $_SERVER['REQUEST_TIME'];
  
  $node->menu = array(
    'enabled' => 1,
    'mlid' => 0,
    'module' => 'menu',
    'hidden' => 0,
    'has_children' => 0,
    'customized' => 0,
    'options' => array(),
    'expanded' => 0,
    'parent_depth_limit' => 8,
    'link_title' => $node->title,
    'description' => $node->title,
    'parent' => 'main-menu:0',
    'weight' => 1,
    'plid' => 0,
    'menu_name' => PRIMARY_MENU_NAME // or 'main-menu'?    
  );
  
  node_submit($node);
  node_save($node);
  
}

function npt_setup_news_form($form, &$form_state) {
  $form['news'] = array(
    '#title' => t('News'),
    '#type' => 'fieldset',
    '#description' => t('Please provide your first news article. <br/>This article will show on the news page.')
  );
  $form['news']['news_title'] = array(
    '#type' => 'textfield',
    '#title' => t('Title:'),
    '#description' => t('The title of your first news article.'),
    '#required' => FALSE
  );
  $form['news']['news_article'] = array(
    '#title' => t('News article'),
    '#type' => 'text_format',
    '#format' => NULL,
    '#required' => FALSE
  );
  return $form;
}

function npt_setup_news_form_submit($form, &$form_state) {

  // Prepare bodytext
  $bodytext = $form_state['values']['news_article']['value'];
  $node = new stdClass();
  $node->type = 'article';
  node_object_prepare($node);
  $node->title = $form_state['values']['news_title'];
  $node->language = LANGUAGE_NONE;
  $node->body[$node->language][0]['value'] = $bodytext;
  $node->body[$node->language][0]['summary'] = text_summary($bodytext);
  $node->body[$node->language][0]['format'] = $form_state['values']['news_article']['format'];
  $node->status = 1;
  $node->comment = 1;
  $node->promote = 0;
  $node->revision = 0;
  $node->changed = $_SERVER['REQUEST_TIME'];
  $node->created = $_SERVER['REQUEST_TIME'];
  $node->field_article_type[$node->language][]['tid'] = 8;

  node_submit($node);
  node_save($node);
}

function npt_setup_licence_form($form, &$form_state) {
  $form['licence_type'] = array(
    '#type' => 'select',
    '#title' => t('Licence type'),
    '#default_value' => variable_get('creative_commons_block_licence_type', CC_BY),
    '#options' => creative_commons_get_licence_types()
  );
  return $form;
}

function npt_setup_licence_form_submit($form, &$form_state) {
  variable_set('creative_commons_block_licence_type', $form_state['values']['licence_type']);
}

function npt_setup_form_alter(&$form, &$form_state, $form_id) {
  global $user;
  // Add npt_setup_form_submit() to all set up flow forms
  if (npt_setup_get_step_delta('site_setup', $form_id) !== FALSE) {
    $form['#submit'][] = 'npt_setup_form_submit';
  }
  switch ($form_id) {
    case 'user_profile_form':
      if ($user->uid == 2 && !variable_get('npt_setup_complete', FALSE)) {
        $form['#submit'][] = 'npt_setup_user_profile_form_submit';
      }
      break;
  }
}

function npt_setup_user_profile_form_submit(&$form, &$form_state) {
  $form_state['redirect'] = 'setup';
  drupal_get_messages();
}

/**
 * Get the position of the current step
 * @param name of flow $flow_name
 * @param $form_id
 */
function npt_setup_get_step_delta($flow_name, $form_id) {
  $setup_flow = npt_setup_default_flows($flow_name);
  foreach ($setup_flow['steps'] as $delta => $step) {
    if ($step['form_id'] == $form_id) {
      return $delta;
    }
  }
  return FALSE;
}

function npt_setup_form_submit(&$form, &$form_state) {
  if (isset($form_state['formflow']) && isset($form_state['form_info'])) {
    $delta = npt_setup_get_step_delta($form_state['form_info']['id'], $form_state['values']['form_id']);
    // Keep a record of what step we're up to
    $delta++;
    variable_set('npt_setup', $delta);
  }
}

/*********************************************************************************************
 * 
 * COMPLETE PAGE
 * 
 ********************************************************************************************/
function npt_setup_complete_page() {
  //  variable_set('npt_setup_complete', true);
  return array(
    '#show_messages' => TRUE,
    '#theme' => 'page',
    '#type' => 'page',
    'content' => array(
      'thanks' => array(
        '#type' => 'markup',
        '#markup' => t('<p>Thank you, the basic configuration of your site is complete.</p>')
      ),
      'next' => array(
        '#items' => array(
          l(t("Create content"), 'admin/content'),
          l(t("Add a taxonomy"), 'admin/structure/taxonomy')
        ),
        '#title' => t("What next?"),
        '#theme' => 'item_list'
      ),
      'help' => array(
        '#items' => array(
          l(t("Help"), 'http://help.scratchpads.eu', array(
            'absolute' => TRUE
          )),
          l(t("Sandbox"), 'http://sandbox.scratchpads.eu', array(
            'absolute' => TRUE
          ))
        ),
        '#title' => t("Need more help?"),
        '#theme' => 'item_list'
      )
    ),
    '#sorted' => TRUE
  );
}

/** 
 * Implements hook_block_info()
 */
function npt_setup_block_info() {
  // This example comes from node.module.
  $blocks['npt_setup'] = array(
    'info' => t('NPT setup'),
    'cache' => DRUPAL_NO_CACHE,
    'region' => 'dashboard_sidebar',
    'status' => 1,
    'theme' => 'npt_admin'
  );
  return $blocks;
}

function npt_setup_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'npt_setup':
      $path = drupal_get_path('module', 'npt_setup');
      $block['subject'] = t('Setup status');
      $setup_flow = npt_setup_default_flows('site_setup');
      $current_step = variable_get('npt_setup', FALSE);
      if (is_numeric($current_step)) {
        $percentage_complete = ($current_step / count($setup_flow['steps'])) * 100;
      }
      else {
        $percentage_complete = 100;
      }
      if ($percentage_complete <= 0) {
        $class = 'zero-complete';
      }
      elseif ($percentage_complete < 60) {
        $class = 'half-complete';
      }
      else {
        $class = 'complete';
      }
      $block['content'] = array(
        'bar' => array(
          '#type' => 'html_tag',
          '#tag' => 'div',
          '#value' => '&nbsp;',
          '#attributes' => array(
            'style' => 'width: ' . ($percentage_complete > 0 ? $percentage_complete : '1') . '%',
            'class' => $class
          ),
          '#prefix' => '<div class="setup-complete">',
          '#suffix' => '</div>'
        ),
        'text' => array(
          '#type' => 'html_tag',
          '#tag' => 'span',
          '#value' => t('!percentage% complete', array(
            '!percentage' => $percentage_complete
          ))
        ),
      );
      if ($percentage_complete < 100) {
        $block['content']['link'] = array(
          '#type' => 'link',
          '#href' => 'setup/' . $current_step,
          '#title' => t("Finish setting up the site")
        );
      }
      break;
  }
  return $block;
}

/**
 * A helper function to format email address to it's less likely to be spammed.
 */
function email_format($email) {
  $email = str_replace("@", "[at]", $email);
  $email = str_replace(".", "[dot]", $email);
  return $email;
}