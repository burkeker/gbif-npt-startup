<?php
/**
 * @file
 *  Essential functions to produce Nodes information blocks.
 */

/**
 * Implementation of hook_menu().
 */
function npt_stats_menu() {
  $node_info = variable_get('gbif_participant_settings');
  $name = isset($node_info['node_shortname']) ? $node_info['node_shortname'] : $node_info['node_title'];
  $items['npt/stats'] = array(
    'title' => 'Facts',
    'description' => 'Statistics about !name', array('!name' => $name),
    'page callback' => 'npt_stats_page_view',
    'access callback' => TRUE,
    'type' => MENU_NORMAL_ITEM,
    'menu_name' => 'main-menu',
    'weight' => 19
  );
  return $items;
}

function npt_stats_library() {
  $libraries['gbif_participation'] = array(
    'title' => 'GBIF Participation',
    'js' => array(
      drupal_get_path('module', 'npt_stats') . '/js/gbifParticipation.js' => array(
        'type' => 'file',
        'scope' => 'footer',
        'weight' => 20,
      ),
    ),
  );
  $libraries['data_publishing_orgs'] = array(
    'title' => 'Data publishers',
    'js' => array(
      drupal_get_path('module', 'npt_stats') . '/js/dataPublishers.js' => array(
        'type' => 'file',
        'scope' => 'footer',
        'weight' => 20,
      ),
    ),
  );
  $libraries['data_publishing_tech'] = array(
    'title' => 'Technical installations',
    'js' => array(
      drupal_get_path('module', 'npt_stats') . '/js/techInstallations.js' => array(
        'type' => 'file',
        'scope' => 'footer',
        'weight' => 20,
      ),
    ),
  );
  $libraries['data_publishing_status'] = array(
    'title' => 'Technical installations',
    'js' => array(
      drupal_get_path('module', 'npt_stats') . '/js/dataPublishingStatus.js' => array(
        'type' => 'file',
        'scope' => 'footer',
        'weight' => 20,
      ),
    ),
  );
  return $libraries;
}

/**
 * Implements hook_block_info().
 */
function npt_stats_block_info() {
  $blocks['gbif_participation'] = array(
    'info' => t('GBIF Participation'),
    'region' => 'content',
    'weight' => 1,
    'theme' => NPTSTARTUP_THEME,
    'status' => 1,
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => 'npt/*',
  );
  $blocks['data_publishing_orgs'] = array(
    'info' => t('Data publishers'),
    'region' => 'content',
    'weight' => 2,
    'theme' => NPTSTARTUP_THEME,
    'status' => 1,
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => 'npt/*',
  );
  $blocks['data_publishing_tech'] = array(
    'info' => t('Technical Installations'),
    'region' => 'content',
    'weight' => 3,
    'theme' => NPTSTARTUP_THEME,
    'status' => 1,
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => 'npt/*',
  );
  $blocks['data_publishing_status'] = array(
    'info' => t('Data publishing status'),
    'region' => 'content',
    'weight' => 4,
    'theme' => NPTSTARTUP_THEME,
    'status' => 1,
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => 'npt/*',
  );
  return $blocks;
}

function npt_stats_block_view($delta = '') {
  $node_info = variable_get('gbif_participant_settings');
  $block = array();
  switch ($delta) {
    case 'gbif_participation':
      $status_text = npt_stats_membership_status($node_info['participant_type']);

      $block['subject'] = t('GBIF Participation');
      $block['content'] = array(
        '#markup' => '<p>' . t('Membership status: ') . $status_text . '</p>',
      );
      break;
    case 'data_publishing_orgs':
      npt_constants_js_settings();
      npt_stats_js_settings();
      drupal_add_library('npt_stats', 'data_publishing_orgs', FALSE);
      
      $block['subject'] = t('Endorsed Data Publishers');
      $block['content'] = array(
        '#markup' => ' ',
      );
      break;
    case 'data_publishing_tech':
      npt_constants_js_settings();
      npt_stats_js_settings();
      drupal_add_library('npt_stats', 'data_publishing_tech', FALSE);

      $block['subject'] = t('Technical Installations');
      $block['content'] = array(
        '#markup' => ' ',
      );
      break;
    case 'data_publishing_status':
      npt_constants_js_settings();
      npt_stats_js_settings();
      drupal_add_library('npt_stats', 'data_publishing_status', FALSE);

      $block['subject'] = t('Data publishing status');
      $block['content'] = array(
        '#markup' => ' ',
      );
      break;
  }
  return $block;
}

function npt_stats_page_view() {
  $node_info = variable_get('gbif_participant_settings');
  $title = ($node_info['node_shortname'] == '') ? $node_info['node_title'] : $node_info['node_shortname'];
  $page_title = $title . t(' as a GBIF Participant');
  drupal_set_title($page_title);
  $content = ' ';
  return $content;
}

function npt_stats_js_settings() {
  $node_info = variable_get('gbif_participant_settings');
  drupal_add_js(array(
    'npt_stats' => $node_info,
  ), 'setting');
}

function npt_stats_node_settings() {
  $gbif_participant_settings = variable_get('gbif_participant_settings');
  
  // create stream context, set timeout for the API call
  $opts = array(
    'http' => array(
      'method' => 'GET',
      'timeout' => '3',
    ),
  );
  $context = stream_context_create($opts);
  $url = GBIF_REGISTRY_API_NODE . '/' . $gbif_participant_settings['node_uuid'];
  
  // Call the API
  $node_info = json_decode(file_get_contents($url, false, $context));
  return $node_info;
}

function npt_stats_membership_status($status) {
  $status_text;
  switch ($status) {
    case 'VOTING':
      $status_text = t('Voting Country Participant');
      break;
    case 'ASSOCIATE':
      $status_text = t('Associate Country Participant');
      break;
    case 'OTHER':
      $status_text = t('Associate Participant');
      break;
  }
  return $status_text;
}