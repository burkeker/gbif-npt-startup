<?php
/**
 * @file
 * Installation of npt_startup.
 *
 */

function npt_startup_tweak_install() {

  // Enable NPT themes.
  theme_enable(array(
    'gbifwhite',
    'npt_admin',
  ));
  variable_set('node_admin_theme', '1');

  // Set the default theme.
  variable_set('theme_default', 'gbifwhite');
  variable_set('admin_theme', 'npt_admin');

  // Disable unused themes and the Scratchpads themes.
  theme_disable(array(
    'bartik',
    'scratchpads',
    'scratchpads_admin',
  ));

  // Disable unnecessary modules
  module_disable(array(
    'overlay',
    'toolbar'
  ), TRUE);

  module_enable(array(
    'npt_stats',
    'npt_mendeley',
  ));

  variable_set('creative_commons_block_display_type', '80x15.png');

  // Set the comment form defaults.
  foreach (node_type_get_names() as $type => $name) {
    if ($type != 'forum') {
      variable_set('comment_form_location_' . $type, COMMENT_FORM_SEPARATE_PAGE);
    }
  }

  npt_startup_tweak_vocabularies();
  npt_startup_tweak_default_node_type();
  npt_startup_tweak_default_multilingual();
  npt_startup_tweak_default_page(); // Insert default pages
  menu_rebuild();
}

function npt_startup_tweak_vocabularies() {
  // Insert default pre-defined vocabularies
  $vocabularies = array(
    'article_type' => array(
      'name' => 'Article Type',
      'machine_name' => 'article_type',
      'description' => 'Term to categorise articles',
      'hierarchy' => '0',
      'module' => 'taxonomy',
      'weight' => '0',
      'rdf_mapping' => array(
        'rdftype' => array(
          0 => 'skos:ConceptScheme',
        ),
        'name' => array(
          'predicates' => array(
            0 => 'dc:title',
          ),
        ),
        'description' => array(
          'predicates' => array(
            0 => 'rdfs:comment',
          ),
        ),
      ),
    ),
    'species_list' => array(
      'name' => 'Biodiversity Data',
      'machine_name' => 'species_list',
      'description' => 'A default site-wide biological classification',
      'hierarchy' => '0',
      'module' => 'taxonomy',
      'weight' => '0',
      'rdf_mapping' => array(
        'rdftype' => array(
          0 => 'skos:ConceptScheme',
        ),
        'name' => array(
          'predicates' => array(
            0 => 'dc:title',
          ),
        ),
        'description' => array(
          'predicates' => array(
            0 => 'rdfs:comment',
          ),
        ),
      ),
    ),
    'tags' => array(
      'name' => 'Tags',
      'machine_name' => 'tags',
      'description' => 'A pre-defined vocabulary for free tagging.',
      'hierarchy' => '0',
      'module' => 'taxonomy',
      'weight' => '0',
      'rdf_mapping' => array(
        'rdftype' => array(
          0 => 'skos:ConceptScheme',
        ),
        'name' => array(
          'predicates' => array(
            0 => 'dc:title',
          ),
        ),
        'description' => array(
          'predicates' => array(
            0 => 'rdfs:comment',
          ),
        ),
      ),
    ),
  );
  foreach ($vocabularies as $vocabulary) {
    $vocabulary = (object)$vocabulary;
    taxonomy_vocabulary_save($vocabulary);
  }
  // Insert default terms for article_type
  $terms = array(
    array(
      'name' => 'news'
    ),
    array(
      'name' => 'blog'
    ),
    array(
      'name' => 'log'
    )
  );
  $vocabulary = taxonomy_vocabulary_machine_name_load('article_type');
  foreach ($terms as $term) {
    $term = (object)$term;
    $term->vid = $vocabulary->vid;
    taxonomy_term_save($term);
  }

  // Insert default biological classification
  $default_biological_vocabulary = taxonomy_vocabulary_machine_name_load('species_list');
  $default_biological_vocabulary->biological_classification = 1;
  itis_term_taxonomy_vocabulary_biological_classification($default_biological_vocabulary, '1');
}

function npt_startup_tweak_default_node_type() {
  // Insert default pre-defined node types
  $types = array(
    array(
      'type' => 'article',
      'name' => st('Article'),
      'base' => 'node_content',
      'description' => st('Use <em>articles</em> for time-sensitive content like news, press releases or blog posts.'),
      'custom' => 1,
      'modified' => 1,
      'locked' => 0,
    ),
  );
  foreach ($types as $type) {
    $type = node_type_set_defaults($type);
    node_type_save($type);
    scratchpads_tweaks_add_body_field($type);
  }  
}

/**
 * Default how to publish data to GBIF page
 */
function npt_startup_tweak_default_page() {
  $path = drupal_get_path('module', 'npt_startup_tweak');
  $initial_contents_path = $path . '/initial_contents';
  
  $bodytext = '';
  $bodytext_file = $initial_contents_path . '/how_to_publish_data_through_gbif_en.txt';
  $bodytext = file_get_contents($bodytext_file);
  
  $text_summary = '';
  $text_summary_file = $initial_contents_path . '/how_to_publish_data_through_gbif_sum_en.txt';
  $text_summary = file_get_contents($text_summary_file);
  
  $node = new stdClass();
  $node->type = 'page';
  node_object_prepare($node);
  $node->title = t('How to publish data through the GBIF network');
  $node->language = LANGUAGE_NONE;
  $node->body[$node->language][0]['value'] = $bodytext;
  $node->body[$node->language][0]['summary'] = text_summary($text_summary);
  $node->body[$node->language][0]['format'] = 'filtered_html';
  $node->status = 1;
  $node->comment = 1;
  $node->promote = 0;
  $node->revision = 0;
  $node->changed = $_SERVER['REQUEST_TIME'];
  $node->created = $_SERVER['REQUEST_TIME'];
  node_submit($node);
  node_save($node);
  
  // Use this node as the front page
  variable_set('howto_publish_page', 'node/' . $node->nid);
}

/**
 * Default multilingual settings
 * This function essentially mimic the form submission at
 * admin/config/regional/language/configure
 * Please refer to function locale_languages_configure_form_submit (at line 675)
 * in modules/locale/locale.admin.inc
 */
function npt_startup_tweak_default_multilingual() {
  $negotiation = array(
    'locale-url' => array(
      'types' => array(
        '0' => 'language_content',
        '1' => 'language',
        '2' => 'language_url',
      ),
      'callbacks' => array(
        'language' => 'locale_language_from_url',
        'switcher' => 'locale_language_switcher_url',
        'url_rewrite' => 'locale_langauge_url_rewrite_url',
      ),
      'file' => 'includes/locale.inc',
      'weight' => '-8',
      'name' => 'URL',
      'description' => 'Determine the language from the URL (Path prefix or domain).',
      'config' => 'admin/config/regional/language/configure/url',
    ),
    'language-default' => array(
      'callbacks' => array(
        'language' => 'language_from_default',
      ),
      'weight' => '10',
      'name' => 'Default',
      'description' => 'Use the default site language (English).',
    ),
  );
  
  $providers_weight = array(
    'locale-url' => '-8',
    'locale-session' => '-6',
    'locale-user' => '-4',
    'locale-browser' => '-2',
    'language-default' => '10',
  );
  
  language_negotiation_set('language', $negotiation);
  variable_set("locale_language_providers_weight_$type", $providers_weight);
  language_types_set();
}