<?php

/**
 * @file
*
* Scratchpads pages tests.
*/
class ScratchpadsPagesTestCase extends ScratchpadsTweaksTestCase{

  protected $admin_user;

  public static function getInfo(){
    return array(
      'name' => 'Scratchpads Pages',
      'description' => 'Tests scratchpads pages',
      'group' => 'Scratchpads'
    );
  }

  /**
   * Enable modules and create users with specific permissions.
   */
  public function setUp(){
    $modules[] = 'scratchpads_pages';
    $modules[] = 'scratchpads_blog';
    $modules[] = 'scratchpads_forum';
    parent::setUp($modules);
    //  Create users.
    $this->admin_user = $this->drupalCreateUser(array(
      'access content',
      'access administration pages',
      'administer site configuration',
      'administer users',
      'administer permissions',
      'administer content types',
      'administer nodes',
      'bypass node access',
      'access overlay',
      'access content overview',
      'view the administration theme',
      'access all views',
      'administer menu'
    ));
    // We set the legal_accepted on the user so that login passes.
    parent::scratchpads_tweaks_legal_save($this->admin_user->uid);
    $this->drupalLogin($this->admin_user);
  }

  /**
   * Test that 'Page display' is present on all 'manage content type' pages,
   */
  function testPageDisplay(){
    $content_types = node_type_get_names();
    foreach($content_types as $machine_name => $content_type){
      $this->drupalGet('admin/structure/types/manage/' . $machine_name);
      $this->assertText('Page display');
      $this->assertRaw('edit-page-display-type');
    }
  }

  /**
   *  Test that locked content type's page display can't be modified
   */
  function testLockedTypes(){
    $locked_types = scratchpads_pages_page_display_locked_types();
    foreach($locked_types as $locked_type){
      $this->drupalGet('admin/structure/types/manage/' . $locked_type);
      $edit = array();
      $edit['page_display_type'] = 'none';
      // custom method defined in scratchpads_tweaks
      $this->drupalAssertPostFail(NULL, $edit, 'Save content type');
    }
  }

  /**
   * Attempt to change the display if not locked.
   */
  function testUnlockedTypes(){
    $content_types = node_type_get_names();
    $locked_types = scratchpads_pages_page_display_locked_types();
    foreach($content_types as $machine_name => $content_type){
      // if not a locked type, attempt to change the page display
      if(!in_array($machine_name, $locked_types)){
        $this->drupalGet('admin/structure/types/manage/' . $machine_name);
        $edit = array();
        $edit['page_display_type'] = 'none';
        $this->drupalPost(NULL, $edit, 'Save content type');
      }
    }
  }

  /**
   * Test that 'page' content type has a forced menu link.
   */
  function testPageMenuLink(){
    $this->drupalGet('node/add/page');
    $edit = array();
    $edit['title'] = $this->randomName();
    $edit['menu[link_title]'] = '';
    // custom method defined in scratchpads_tweaks
    $this->drupalPost(NULL, $edit, 'Save');
    $this->assertText('Menu link title field is required.');
  }

  /**
   * Tests block_info() for the scratchpads pages module.
   */
  public function testBlockInfo(){
    $info = module_invoke('scratchpads_pages', 'block_info');
    $this->assertEqual(1, count($info), t('Module defines a block'));
    $this->assertTrue(isset($info['signpost']), t('Signpost block exists.'));
  }

  /**
   * Tests block_view() for the scratchpads pages module.
   */
  public function testBlockView(){
    $data = module_invoke('scratchpads_pages', 'block_view', 'signpost');
    $this->assertTrue(is_array($data), t('Block returns renderable array.'));
  }
}