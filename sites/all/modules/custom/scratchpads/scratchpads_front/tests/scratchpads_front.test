<?php

/**
 * @file
*
* Scratchpads front tests.
*/
class ScratchpadsFrontTestCase extends ScratchpadsTweaksTestCase{

  protected $admin_user;

  protected $test_user;

  public static function getInfo(){
    return array(
      'name' => 'Scratchpads Front',
      'description' => "Tests for scratchpads front",
      'group' => 'Scratchpads'
    );
  }

  /**
   * Enable modules and create users with specific permissions.
   */
  public function setUp(){
    $modules[] = 'scratchpads_front';
    parent::setUp($modules);
    //  Create users.
    $this->admin_user = $this->drupalCreateUser(array(
      'access content',
      'access administration pages',
      'administer site configuration',
      'administer users',
      'administer permissions',
      'administer content types',
      'administer nodes',
      'bypass node access',
      'access overlay',
      'access content overview',
      'view the administration theme',
      'access all views',
      'administer comments',
      'administer front page',
      'administer taxonomy'
    ));
    $this->test_user = $this->drupalCreateUser(array(
      'access content'
    ));
    // We set the legal_accepted on the user so that login passes.
    parent::scratchpads_tweaks_legal_save($this->admin_user->uid);
    parent::scratchpads_tweaks_legal_save($this->test_user->uid);
  }

  /**
   *  Test that front page can be accessed
   */
  function testFrontBasic(){
    $this->drupalLogin($this->test_user);
    $this->drupalGet('');
    $this->assertResponse(200);
    $this->assertText('Welcome', 'Welcome message displayed');
  }

  /**
   * Add a page node and see if it appears on the front page.
   * Change the settings and see that the page no longer appears.
   * Repeat for taxon descriptions.
   */
  function testFrontBlocks(){
    $this->drupalLogin($this->admin_user);
    $page_title = $this->randomName(8);
    $page_node = $this->drupalCreateNode(array(
      'type' => 'page',
      'title' => $page_title
    ));
    $path = 'node/' . $page_node->nid;
    $this->drupalGet($path);
    $this->assertResponse(200, 'Page node successfully created');
    $this->drupalGet('');
    $this->assertText($page_title, 'page title displayed on front page');
    $this->drupalGet('scratchpads-front/edit');
    $edit = array();
    // required field
    $edit['front_page_welcome_message[value]'] = $this->randomName(16);
    // we set all 3 to ensure that page will not be displayed
    $edit['front_page_block_1_node_type'] = 'spm';
    $edit['front_page_block_2_node_type'] = 'spm';
    $edit['front_page_block_3_node_type'] = 'spm';
    $this->drupalPost(NULL, $edit, 'Save');
    $this->drupalGet('');
    $this->assertNoText($page_title, 'page title no longer displayed on front page');
    $taxon_name = $this->createSpm();
    $this->drupalGet('');
    $this->assertText($taxon_name, 'Spm title displayed on front page');
  }

  /**
   *  Helper function
   *  Create as spm taxon description
   */
  protected function createSpm(){
    // create taxonomy
    $edit = array();
    $human_name = $this->randomName();
    $edit['name'] = $human_name;
    $machine_readable = $this->machine_name($human_name);
    $edit['machine_name'] = $machine_readable;
    $edit['biological_classification'] = 1;
    $this->drupalPost('admin/structure/taxonomy/add', $edit, t('Save'));
    $this->assertText('Created new vocabulary', 'biological classification successfully created');
    // create a term for the newly created taxonomy
    $this->drupalGet('admin/structure/taxonomy/' . $machine_readable . '/add');
    $edit2 = array();
    // We will use these variables later on
    $name2 = $this->randomName();
    $name3 = $this->randomName();
    $edit2['name'] = $name2;
    $edit2['field_unit_name1[und][0][value]'] = $name3;
    $this->drupalPost(NULL, $edit2, t('Save'));
    $this->assertText('Created new term', 'New term successfully created');
    // create an spm node using the form
    // The spm form takes taxonomy terms in the following format: 'Aves [8]'
    $taxon_array = taxonomy_get_term_by_name($name3);
    // The term id is the first key of the array
    reset($taxon_array);
    $tid = key($taxon_array);
    $formatted_term = $name2 . ' [' . $tid . ']';
    $this->drupalGet('node/add/spm');
    $edit3 = array();
    $edit3['field_taxonomic_name[und]'] = $formatted_term;
    $edit3['field_general_description[und][0][value]'] = $this->randomName();
    $edit3['promote'] = 1;
    $edit3['status'] = 1;
    $this->drupalPost(NULL, $edit3, t('Save'));
    $this->assertText('has been created', 'New taxonomy description successfully created');
    return $name3;
  }
}




